已切换mybatis-plus版本的定时调度可以用com.eshore.wbtimer.executor.mybatisutil.MybatisPlusGenerator（单元测试运行即可），
这个类来生成基础bean和mapper，旧的xml形式的MybatisPlusGenerator生成组件也可使用，但不推荐使用

代码编写过程中涉及到日志输出的均使用统一输出类 WbtimerJobLogger,此类会输出日志到调度中心前端
，做单元测试本地debug时可以自己随意syso，但提交代码时必须把信息输出改成WbtimerJobLogger输出

代码编写过程中涉及Properties获取的均使用统一util类 PropertiesUtil

代码编写过程中如涉及字符串处理或者日期处理等通用处理的，优先检查是否有通用工具类，避免写太多重复代码，
如果没有，建议加入通用工具类，造福后代

定时调度编写流程 ->handler->service->serviceimpl->mapper

wbtimer-admin 为调度中心展示端 用于调度执行器执行任务
调度中心与执行器之间只存在调度的通信交换
各个执行器相互独立互不影响
调度中心和各个执行器均需要单独启动

开发做本地测试时尽量使用单元测试（handlertest）或者自启动一个本地调度做测试，则把相关配置文件中关联调度中心的ip改为本地ip即可

调度中心和执行器通讯时，如果存在网络限制，可能需要在相关配置中写死配置的ip
建议使用内网地址，公网地址可能会出现连接不上的问题（ip映射，防火墙等等）

注:正常编写定时任务无需关心调度中心启动与否

需要切换生产配置的文件:
wbtimer\wbtimer-core\src\main\java\com\eshore\wbtimer\core\utils\PropertiesUtil.java
wbtimer\wbtimer-executor\src\main\resources\conf\jdbc.properties
wbtimer\wbtimer-executor\src\main\resources\conf\wbtimer-job-executor.properties
wbtimer\wbtimer-admin\src\main\resources\wbtimer-admin.properties