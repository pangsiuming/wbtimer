<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    <!-- 定义受环境影响易变的变量 -->
    <context:property-placeholder location="classpath*:conf/jdbc.properties" ignore-unresolvable="true"  /><!--  加载 .properties  -->
    <!-- 使用加密版的属性文件，可在构造函数属性加入要加密的属性，但目前内存加密后没重写如properties文件
    <vo class="com.eshore.khala.core.controller.pub.utils.EncryptPropertyPlaceholderConfigurer">
        <constructor-arg value="" />
        <property name="locations">
            <list>
                <value>classpath:database.properties</value>
            </list>
        </property>
    </vo> -->
    <!-- data source -->
    <bean id="exPwdFactory" class="com.eshore.wbtimer.core.utils.EncryptDBPasswordFactory">
        <property name="encryptedPasswd" value="${exdatasource.password}"/>
    </bean>

    <bean id="exDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${exdatasource.url}" />
        <property name="username" value="${exdatasource.username}" />
        <property name="password" ref="exPwdFactory" />

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="30" />
        <property name="minIdle" value="5" />
        <property name="maxActive" value="60" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />
        <!-- 配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。 -->
        <property name="useUnfairLock" value="true" />
        <!--建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。-->
        <property name="testWhileIdle" value="true" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="SELECT 1 FROM DUAL" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小, 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭-->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="100" />

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat" />

        <property name="removeAbandoned" value="true" />
        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandonedTimeout" value="1800" />
        <!-- 1800秒，也就是30分钟 -->
        <property name="logAbandoned" value="true" />
    </bean>

    <bean id="transactionManagerEx" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="exDataSource" />
    </bean>

    <tx:advice id="txAdviceEx" transaction-manager="transactionManagerEx">
        <tx:attributes>
            <tx:method name="get*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"  />
            <tx:method name="getRechargeParam" propagation="REQUIRED"  />
            <tx:method name="add*" propagation="REQUIRED"  />
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />
            <tx:method name="page*" propagation="REQUIRED" read-only="true" />
            <tx:method name="*" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>
</beans>